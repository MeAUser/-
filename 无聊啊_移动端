<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>无聊</title>
    <style>
        /* 引入 Google 字体 */
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap');

        /* 全局样式 */
        body, html {
            margin: 0;
            padding: 0;
            overflow: hidden;
            font-family: 'Roboto', sans-serif;
            background: #0e0b16;
            color: #fff;
            height: 100%;
            width: 100%;
        }

        /* 自定义鼠标指针 */
        .custom-cursor {
            position: absolute;
            width: 20px;
            height: 20px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 50%;
            pointer-events: none;
            transform: translate(-50%, -50%);
            z-index: 1000;
            display: none; /* 默认隐藏，后续根据设备类型显示 */
        }

        /* 背景粒子效果 */
        #particles-js {
            position: absolute;
            width: 100%;
            height: 100%;
            background-color: #0e0b16;
            background-size: cover;
            background-position: 50% 50%;
            z-index: -2;
        }

        /* 内容容器 */
        .content {
            position: relative;
            width: 90%;
            max-width: 800px;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            overflow: hidden;
            text-align: center;
            padding: 20px;
            box-sizing: border-box;
        }

        /* 文字动画 */
        h1 {
            font-size: 4em;
            margin: 0;
            color: #a239ca;
            opacity: 0;
            animation: fadeInDown 1.5s forwards;
        }

        /* 游戏规则提示 */
        .instructions {
            opacity: 0;
            max-width: 600px;
            line-height: 1.5;
            margin-top: 20px;
            font-size: 1.2em;
            animation: fadeInUp 1.5s forwards 0.5s;
            color: rgba(255, 255, 255, 0.8);
        }

        /* 按钮样式 */
        .start-btn {
            margin-top: 40px;
            padding: 15px 40px;
            font-size: 1.5em;
            background: linear-gradient(45deg, #4717f6, #a239ca);
            border: none;
            border-radius: 30px;
            color: #fff;
            cursor: pointer;
            transition: background 0.3s, transform 0.3s;
            opacity: 0;
            animation: fadeInUp 1s forwards 1s;
            box-shadow: 0 4px 15px rgba(162, 57, 202, 0.75);
        }

        .start-btn:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 20px rgba(162, 57, 202, 0.85);
        }

        /* 去除按钮的默认指针样式 */
        .start-btn:focus {
            outline: none;
        }

        /* 动画效果 */
        @keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translateY(-50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* 互动区域样式 */
        #gameArea {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: none;
            overflow: hidden;
        }

        /* 气泡样式 */
        .bubble {
            position: absolute;
            background: radial-gradient(circle at center, rgba(162, 57, 202, 0.8), rgba(71, 23, 246, 0.3));
            border-radius: 50%;
            backdrop-filter: blur(5px);
            animation: floatUp linear infinite;
            pointer-events: auto;
            box-shadow: 0 0 15px rgba(162, 57, 202, 0.75);
            transition: transform 0.2s, opacity 0.2s;
        }

        @keyframes floatUp {
            from {
                transform: translateY(100vh) scale(0.8);
                opacity: 0;
            }
            to {
                transform: translateY(-50px) scale(1.2);
                opacity: 1;
            }
        }

        /* 点击破裂动画 */
        .explode {
            position: absolute;
            width: 50px;
            height: 50px;
            background: radial-gradient(circle, rgba(255,255,255,0.8), rgba(255,255,255,0));
            border-radius: 50%;
            pointer-events: none;
            animation: explodeAnimation 0.5s forwards;
            transform: translate(-50%, -50%);
        }

        @keyframes explodeAnimation {
            from {
                transform: translate(-50%, -50%) scale(1);
                opacity: 1;
            }
            to {
                transform: translate(-50%, -50%) scale(2);
                opacity: 0;
            }
        }

        /* 显示网络热梗的样式 */
        .meme-text {
            position: absolute;
            font-size: 1em;
            color: #fff;
            animation: memeAnimation 3s ease-out forwards;
            pointer-events: none;
            text-shadow: 0 0 5px rgba(255, 255, 255, 0.8);
            max-width: 200px;
            text-align: center;
        }

        @keyframes memeAnimation {
            from {
                transform: translateY(0);
            }
            to {
                transform: translateY(-150px);
            }
        }

        /* 一镜到底过渡动画 */
        .transition {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 70%);
            animation: zoomOut 1s forwards;
            z-index: 100;
        }

        @keyframes zoomOut {
            from {
                transform: scale(0);
                opacity: 1;
            }
            to {
                transform: scale(10);
                opacity: 0;
            }
        }

        /* 响应式设计 */

        /* 手机（小于768px） */
        @media (max-width: 767px) {
            h1 {
                font-size: 2.5em;
            }

            .instructions {
                font-size: 1em;
                margin-top: 15px;
            }

            .start-btn {
                padding: 12px 30px;
                font-size: 1.2em;
                margin-top: 30px;
            }

            .meme-text {
                font-size: 0.9em;
                max-width: 150px;
            }

            .bubble {
                width: 20px;
                height: 20px;
            }

            .explode {
                width: 30px;
                height: 30px;
            }

            /* 调整按钮触控反馈 */
            .start-btn:active {
                transform: scale(0.98);
            }
        }

        /* 平板（768px - 1024px） */
        @media (min-width: 768px) and (max-width: 1024px) {
            h1 {
                font-size: 3.5em;
            }

            .instructions {
                font-size: 1.1em;
                margin-top: 18px;
            }

            .start-btn {
                padding: 14px 35px;
                font-size: 1.3em;
                margin-top: 35px;
            }

            .meme-text {
                font-size: 1em;
                max-width: 180px;
            }

            .bubble {
                width: 25px;
                height: 25px;
            }

            .explode {
                width: 40px;
                height: 40px;
            }
        }

        /* PC（大于1024px） */
        @media (min-width: 1025px) {
            h1 {
                font-size: 5em;
            }

            .instructions {
                font-size: 1.2em;
                margin-top: 20px;
            }

            .start-btn {
                padding: 15px 40px;
                font-size: 1.5em;
                margin-top: 40px;
            }

            .meme-text {
                font-size: 1.2em;
                max-width: 200px;
            }

            .bubble {
                width: 30px;
                height: 30px;
            }

            .explode {
                width: 50px;
                height: 50px;
            }
        }

        /* 针对触控设备的额外样式 */
        .touch .custom-cursor {
            display: none; /* 隐藏自定义鼠标指针 */
        }

        .touch .start-btn {
            /* 增大按钮触控区域 */
            padding: 20px 50px;
        }

        .touch .bubble {
            /* 增大气泡尺寸 */
            width: 25px;
            height: 25px;
        }

        .touch .explode {
            /* 增大爆炸动画 */
            width: 40px;
            height: 40px;
        }

    </style>
    <!-- 引入粒子动画库 -->
    <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
</head>
<body>

    <div id="particles-js"></div>

    <div class="content">
        <h1>无聊</h1>
        <p class="instructions">点击上升的光球，释放压力，感受奇妙的旅程！</p>
        <button class="start-btn" onclick="startGame()">开始游戏</button>
    </div>

    <div id="gameArea">
        <!-- 互动元素将在 JavaScript 中动态添加 -->
    </div>

    <!-- 自定义鼠标指针 -->
    <div class="custom-cursor" id="customCursor"></div>

    <!-- 过渡动画层 -->
    <div id="transitionLayer"></div>

    <!-- 添加音效 -->
    <audio id="popSound" src="https://www.myinstants.com/media/sounds/pop-39222.mp3" preload="auto"></audio>
    <audio id="bgMusic" src="https://www.bensound.com/bensound-music/bensound-sunny.mp3" loop preload="auto"></audio>

    <script>
        let useFirstAPI = true; // 用于交替调用API
        let bubbleInterval;
        let bgMusicPlayed = false;

        // 检测是否为触控设备
        const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
        if (isTouchDevice) {
            document.body.classList.add('touch');
        } else {
            document.body.classList.add('no-touch');
        }

        // 自定义鼠标指针，仅在非触控设备上显示
        const customCursor = document.getElementById('customCursor');
        if (!isTouchDevice) {
            document.addEventListener('mousemove', e => {
                customCursor.style.left = e.clientX + 'px';
                customCursor.style.top = e.clientY + 'px';
                customCursor.style.display = 'block';
            });
        }

        function startGame() {
            // 一镜到底过渡动画
            const transition = document.createElement('div');
            transition.className = 'transition';
            document.body.appendChild(transition);

            setTimeout(() => {
                transition.remove();
                document.querySelector('.content').style.display = 'none';
                document.getElementById('gameArea').style.display = 'block';
                initGame();
            }, 1000);
        }

        function initGame() {
            // 播放背景音乐
            if (!bgMusicPlayed) {
                document.getElementById('bgMusic').play().catch(error => {
                    console.warn('背景音乐无法自动播放，用户可能需要手动播放。', error);
                });
                bgMusicPlayed = true;
            }

            // 每隔一段时间生成气泡
            bubbleInterval = setInterval(createBubble, 700);

            // 在触控设备上添加额外的交互，例如点击屏幕创建气泡
            if (isTouchDevice) {
                document.getElementById('gameArea').addEventListener('touchstart', function(e) {
                    const touch = e.touches[0];
                    createBubbleAt(touch.clientX, touch.clientY);
                });
            }
        }

        function createBubble() {
            const x = Math.random() * (window.innerWidth - 50) + 25; // 保证气泡在屏幕内
            const y = window.innerHeight + 50; // 从屏幕下方生成
            createBubbleAt(x, y);
        }

        function createBubbleAt(x, y) {
            let bubble = document.createElement('div');
            bubble.className = 'bubble';
            let size = isTouchDevice ? Math.random() * 20 + 25 : Math.random() * 40 + 30; // 调整触控设备气泡大小
            bubble.style.width = size + 'px';
            bubble.style.height = size + 'px';
            bubble.style.left = x + 'px';
            bubble.style.top = y + 'px';
            bubble.style.animationDuration = (Math.random() * 3 + 4) + 's';
            bubble.onclick = popBubble;
            if (isTouchDevice) {
                bubble.ontouchstart = popBubble; // 触控设备上的触摸事件
            }
            document.getElementById('gameArea').appendChild(bubble);

            // 气泡到达顶部后消失
            setTimeout(() => {
                bubble.remove();
            }, (parseFloat(bubble.style.animationDuration) * 1000));
        }

        function popBubble(event) {
            // 阻止事件冒泡，避免触控设备上多次触发
            event.stopPropagation();

            // 播放音效
            const popSound = document.getElementById('popSound');
            popSound.currentTime = 0;
            popSound.play().catch(error => {
                console.warn('Pop sound failed to play.', error);
            });

            // 获取点击位置
            let x, y;
            if (event.type.startsWith('touch')) {
                const touch = event.touches[0] || event.changedTouches[0];
                x = touch.clientX;
                y = touch.clientY;
            } else {
                x = event.clientX;
                y = event.clientY;
            }

            // 点击反馈：添加破裂动画
            let explode = document.createElement('div');
            explode.className = 'explode';
            explode.style.left = x + 'px';
            explode.style.top = y + 'px';
            document.getElementById('gameArea').appendChild(explode);

            setTimeout(() => {
                explode.remove();
            }, 500);

            // 显示随机网络热梗
            showMeme(x, y);

            // 移除气泡
            if (event.target.classList.contains('bubble')) {
                event.target.remove();
            }
        }

        function showMeme(x, y) {
            let apiUrl;
            if (useFirstAPI) {
                apiUrl = 'https://api.shadiao.pro/du';
            } else {
                apiUrl = 'https://v1.hitokoto.cn/?encode=json&c=d';
            }
            useFirstAPI = !useFirstAPI; // 切换API

            fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    const memeText = document.createElement('div');
                    memeText.className = 'meme-text';
                    if (apiUrl.includes('shadiao')) {
                        memeText.innerText = data.data.text;
                    } else {
                        memeText.innerText = data.hitokoto;
                    }
                    memeText.style.left = x + 'px';
                    memeText.style.top = y + 'px';
                    document.getElementById('gameArea').appendChild(memeText);

                    setTimeout(() => {
                        memeText.remove();
                    }, 3000);
                })
                .catch(error => {
                    console.error('Error fetching meme:', error);
                });
        }

        // 初始化粒子背景
        particlesJS('particles-js', {
            "particles": {
                "number": {
                    "value": 60,
                    "density": {
                        "enable": true,
                        "value_area": 800
                    }
                },
                "color": {
                    "value": "#ffffff"
                },
                "shape": {
                    "type": "circle",
                    "stroke": {
                        "width": 0,
                        "color": "#000000"
                    },
                },
                "opacity": {
                    "value": 0.5,
                    "random": false,
                },
                "size": {
                    "value": 3,
                    "random": true,
                },
                "line_linked": {
                    "enable": true,
                    "distance": 150,
                    "color": "#ffffff",
                    "opacity": 0.4,
                    "width": 1
                },
                "move": {
                    "enable": true,
                    "speed": 2, // 减慢速度以增强放松感
                    "direction": "none",
                    "random": false,
                    "straight": false,
                    "out_mode": "out",
                }
            },
            "interactivity": {
                "detect_on": "canvas",
                "events": {
                    "onhover": {
                        "enable": !isTouchDevice, // 仅在非触控设备上启用
                        "mode": "repulse"
                    },
                    "onclick": {
                        "enable": false,
                    },
                    "resize": true
                },
                "modes": {
                    "repulse": {
                        "distance": 200,
                        "duration": 0.4
                    },
                }
            },
            "retina_detect": true
        });
    </script>

</body>
</html>
